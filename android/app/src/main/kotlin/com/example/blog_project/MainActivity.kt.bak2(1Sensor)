package com.example.blog_project

import android.hardware.Sensor
import android.hardware.SensorManager
import android.os.Bundle
import io.flutter.embedding.android.FlutterActivity
import io.flutter.plugin.common.MethodChannel

class MainActivity : FlutterActivity() {
    private val CHANNEL = "com.example.sensors/metadata"

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        MethodChannel(
            flutterEngine?.dartExecutor?.binaryMessenger
                ?: throw IllegalStateException("Flutter Engine is not initialized")
        , CHANNEL).setMethodCallHandler { call, result ->
            if (call.method == "getSensorInfo") {
                val sensorManager = getSystemService(SENSOR_SERVICE) as SensorManager
                val sensor: Sensor? = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER)
                if (sensor != null) {
                    val sensorInfo = "Name: ${sensor.name}\nVendor: ${sensor.vendor}\nVersion: ${sensor.version}"
                    result.success(sensorInfo)
                } else {
                    result.error("UNAVAILABLE", "Sensor not available.", null)
                }
            } else {
                result.notImplemented()
            }
        }
    }
}
